# -*- coding: utf-8 -*-
"""01_video-to-numpy-save.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mpjjssn0_Ge-jM2K-jIoqfqqg7uu-TRh

# Imports
"""

import os
import pickle # save list as .pickle
import numpy as np
from tqdm import tqdm
import cv2 # read video file
from skimage.transform import resize # resizing images

"""# 01-A. Transform video files to Numpy array"""

def Save2Npy(file_dir, save_dir):
    if not os.path.exists(save_dir): # If there is not save_dir folder, then create new folder at there.
        os.makedirs(save_dir)

    file_list=os.listdir(file_dir) # Make list of video file(in file_dir folder)'s name.

    for file in tqdm(file_list):
        frames=np.zeros((30, 160, 160, 3), dtype=np.float)
        i=0

        vid=cv2.VideoCapture(os.path.join(file_dir, file)) # Create cv2.VideoCapture() Object of each video file.

        if vid.isOpened():
            grabbed, frame=vid.read()
        else:
            grabbed=False

        frm=resize(frame, (160, 160, 3))
        frm=np.expand_dims(frm, axis=0)

        if(np.max(frm)>1):
            frm=frm/255.0
        frames[i][:]=frm
        i+=1

        while i<30:
            grabbed, frame=vid.read()
            frm=resize(frame, (160, 160, 3))
            frm=np.expand_dims(frm, axis=0)
            if(np.max(frm)>1):
                frm=frm/255.0
            frames[i][:] = frm
            i+=1

        video_name=file.split('.')[0]
        video_path=os.path.join(file_dir, file)
        save_path=os.path.join(save_dir, video_name+'.npy')

        np.save(save_path, frames)

file_dir='Folder having fight videos'
save_dir='Provide the directory path'

Save2Npy(file_dir=file_dir, save_dir=save_dir)

file_dir='Folder having non fight videos'
save_dir='Provide the no fight directory path'

Save2Npy(file_dir=file_dir, save_dir=save_dir)

"""# 01-B. Make list of Numpy arrays

## 1. Fight Videos
"""

Fight_dir='Violence path'
file_list_npy = os.listdir(Fight_dir) # File name list

data_Fight=[]
for file in file_list_npy:
    file_path=os.path.join(Fight_dir, file)
    x=np.load(file_path)
    data_Fight.append(x)

print(len(data_Fight))

"""## 2. NonFight Videos"""

NonFight_dir='Non fight path'
file_list_npy=os.listdir(NonFight_dir)

data_NonFight=[]
for file in file_list_npy:
    file_path=os.path.join(NonFight_dir, file)
    x=np.load(file_path)
    data_NonFight.append(x)

print(len(data_NonFight))

"""# 01-C. Save list as .pickle"""

with open("D:/datasets/AllVideo_numpy_list_pickle/01_data_Fight_210512.pickle","wb") as fw:
    pickle.dump(data_Fight, fw, protocol=pickle.HIGHEST_PROTOCOL)

with open("D:/datasets/AllVideo_numpy_list_pickle/01_data_NonFight_210507.pickle","wb") as fw:
    pickle.dump(data_NonFight, fw, protocol=pickle.HIGHEST_PROTOCOL)

"""## 1. Make Label list"""

label_Fight_per_video=np.array([0,1])
label_Fight=[label_Fight_per_video]*len(data_Fight) # As amount as count of Violence(Fight) Video

label_NonFight_per_video=np.array([1,0])
label_NonFight=[label_NonFight_per_video]*len(data_NonFight) # As amount as count of Non-Violence(NonFight) Video

len(label_Fight), len(label_NonFight)

label_Fight[0], label_NonFight[0]

"""## 2. Save Label list as .pickle"""

with open("D:/datasets/AllVideo_numpy_list_pickle/01_label_Fight_210512.pickle","wb") as fw:
    pickle.dump(label_Fight, fw)

with open("D:/datasets/AllVideo_numpy_list_pickle/01_label_NonFight_210507.pickle","wb") as fw:
    pickle.dump(label_NonFight, fw)